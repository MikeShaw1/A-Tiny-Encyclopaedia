file: 暑假大作业1.mp3
***********************************result**************************************
[0:0.000,0:44.380]  嗯嗯，老师，助教好，这我们小组的这次暑期大作业主要做的是一个百科搜索，然后我们因为宽泛的百科搜索，它涉及领域太多，信息有点太多太杂，我们是找一个切入点，就是呃，基于疾病的百科，就因为当下就健康，问题是比较重要的一个问题，所以我们就通过一个疾病类的百科，让用户可以从简单的搜寻一些疾病信息得到一些得到一些，包括就诊建议啊，然后那些可以进行医治，拯救各种的疾病信息，然后包括后续的那种疗法疗程治疗费用，还有那些宜吃食物、禁忌食物这一类的。
[0:44.340,1:34.580]  嗯，这是我们整体的百科，主要就是提供的疾病信息，然后病因、就诊建议、预防措施、疗程、治疗费用，推荐药品，推荐一些禁忌药品，然后通过用户用，通过这些信息可以根据那些疾病进行简单的自我诊断，然后包括里面有一些就诊科室推荐，然后可以获得基本的就诊建议，然后一些就是预防措施，也能体现进行预防，然后总体框架呢，我们就前端安排呀，react啊，这个产品功能最上面这个最基本的用户登录注册，然后核心功能就是搜索，就是我们的搜索就是根据你的疾病名、疾病信息，然后进行搜索，下面就是展示的搜索结果。
[1:35.240,1:54.100]  然后，呃，包括然后因为百科吗？他除了搜索，你本身要有添加的功能，然后就用户这是更新词条，就是有的词条，你点进去之后就可以根据你已有的信息进行简单的增删改，然后给到就是简单呃。
[1:54.140,2:39.600]  更新词条，创建词条就空白，然后完全空白，然后往里创建，然后包括呃，因为我们这边是分两个用户权限，一个管理员，一个是普通用户，普通用户，你这些创建之后就是不会立马进入到后台数据库中会暂存起来，暂存起来需要，就右边这种需要，呃管理员来审核，管理员会对那些修改过的词条修改记录，在审核已通过通过进行审核，如果审核通过之后才会这样做，

说得不会存到数据库？

是存到一个mongodb的数据库，相当于一个临时数据库，mogodb他不会直接用来存疾病信息
[2:39.980,2:43.840]  呃，功能这些演示视频需要放一下吗？。
[2:44.000,2:45.040]  放。
[2:47.500,3:14.060]  这个数据源是哪里的？

目前阶段也是因为呃，数据量比较大，所以就暂时还没有继续用爬虫爬，大概有呃4万个节点，然后四五十万条关系

数据怎么来的？

数据来自我们之前做一个大创项目。

[3:36.740,3:41.220]  之前是应该是老师从网站上爬来的。
[3:41.160,3:41.720]  嗯。
[3:46.080,3:52.020]  呃，这个做一个，往回倒一点。
[3:52.120,3:55.200]  老师们，嗯嗯。
[3:55.560,4:0.440]  这PPT的视频好像不太好放。
[4:0.460,4:8.500]  嗯嗯，我直接把刚才那个文本框里面出现的那个ObjectObject事情。
[4:9.340,4:16.060]  就是你直接把javascript的Object打出来。
[4:16.060,4:21.500]  不是的，我之前是a，你原先用哪个版本测试呢？
[4:21.540,4:25.860]  就那个，就直接添加，会出一个object。
[4:25.820,4:29.620]  我之前测试我们之前，我是没发现这个问题。
[4:39.040,4:40.900]  你的浏览器在哪。
[4:41.380,4:47.780]  嗯，就是这个，等会再说吧，马上去也行。
[4:48.300,4:50.900]  嗯，嗯。
[4:51.500,4:52.540]  哦。
[4:52.900,4:56.820]  这还是刚才的功能，视频来看，其他OK。
[4:57.160,4:59.280]  嗯，好，从头开始。
[5:1.420,5:40.640]  然后安全方面主要用的是spring security进行那个两个oss进行一些认证授权的主要的框架，呃，如果你呃，往后端发起的时候没有在那个用户信息的话，是会就是带着就直接给你通过，

你说的用户信息是指什么用户信息？，

[5:40.920,5:56.060]  就是works security，他自己有的那个cookie就是他已经登录了他后端会存一个cookie，然后会给前端发个cookie，然后没有那个cookie，没有那个cookie的话就就没有权限
[5:56.300,6:5.900]  然后这边就是演示了几个那种有cookie和没cookie的区别
[6:5.900,6:6.980]  嗯。
[6:7.580,6:8.040]  嗯。
[6:9.360,6:15.720]  就是就是那个登录错误，密码输错用户名不对的。
[6:15.800,6:19.500]  这个是正常登陆上。
[0:2.580,0:10.900]  这个是因为我们是往后台那个添加指定就返回了一个就简单的一个状态码
[0:14.520,0:18.840]  这个是403 fobidden。
[0:19.240,0:20.440]  Com。
[0:20.740,0:22.500]  嗯。
[0:24.040,0:31.440]  就是这个是因为要有管理员权限的，刚才现在登的这个是没有管理员权限，所以说是fobidden。
[0:31.680,0:32.160]  嗯。
[0:37.100,0:41.940]  你们为什么会把这个参数的参数放在parms？
[0:41.900,1:7.900]  这就是这个标准，是不能把post的东西上，你看你这边用的是body，对post不应该把信息放在parms上，

他这个所说他是spirng security自带的一个登录，然后有个登录我们后台登录，不是明文传输的，我们登录不是明文存储。
[1:7.920,1:37.020]  可是我的意思是他不应该被放在会在url显示出来，就是你后面的post请求，你只是把参数放到body里面放着，然后你的登录为什么放到parms里面，放到parms里面

spring security 用的，给密码加密的
[1:37.040,1:49.920]  没有其他办法，这不是也可能是他的课题，这一块还可以给密码加密密码，最后存储的时候这样。
[1:49.860,2:18.480]  就他密码可以加密的，就没有这个问题，这个可能是我们这边的对spring securty，那个了解还不太够呢
[2:18.460,2:21.100]  嗯。
[2:21.600,2:26.220]  然后，这是在前端演示的那个认证授权的那个界面。
[2:26.200,2:37.620]  这边都在讲的非常花时间，然后就测试方面
[2:39.440,2:49.160]  嗯啊，性能测试我们，我们主要是用来……

直接看最后的结果，

结果他放PPT没放出去吗？拿文档。
[2:49.180,2:49.920]  嗯。
[2:50.580,3:7.600]  呃，结果口述一下也行，就刚刚助教那边演示过就呃，100并发量下，然后那个jemiter性能测试大概是在三四百左右，如果开了cache之后能到100多200以内。
[3:7.820,3:14.540]  就是100并发的情况下开不开cache就三四百，和200以内的这个区别。
[3:14.740,3:20.240]  呃。
[3:20.480,3:21.040]  嗯。
[3:21.520,3:22.440]  嗯。
[3:22.920,3:23.700]  嗯。
[3:24.960,3:42.040]  这个视频就过来看，然后这边端到端测试呢，应该有的哈，这个也是这种呃，部署方面，我们主要是用github action来搞这方CICG的这方面，然后就分前端后端，然后分了两个workflow，然后分别控制前后端的提交。
[3:42.040,4:5.700]  然后服务器端我们呃用的是Docker镜像的部署，部署了呃五六个docker镜像，然后暂时没有用PPS，暂时因为我们后期可能时间有点不太够，包括性能上的暂时没有遇到太明显的性能瓶颈，就没有K8S，然后后端这个服务器里边用了一个NN键词进行一个HTML的反向代理。
[4:5.700,4:10.160]  嗯，然后日志方面，工作日志负担。
[4:10.120,4:17.740]  那个CICG这边里面具体在这么一个过程？
[4:17.700,4:58.480]  呃，具体反正是触发master的一些，呃，作为request 和 pushed master的时候，我们这边写两个flow，呃会分别去跑一遍，那个前端后端这个一遍，然后那个就让他的build一遍，

呃，build到那里去，

呃，暂时还没有往服务器端部署，我们主要跑就是单元测试。
[4:58.960,5:10.940]  没有那个就主要跑单元测试。
[5:10.900,5:12.800]  然后后面，嗯。
[5:13.700,5:29.640]  后面就包括用用了，这些上课讲的这些框架，对那些性能包括运营情况，然后那个那个进行一些监控，然后lock包进行一个日志日志打印，有正分两个正常工作日志和那个报错信息日志。
[5:29.900,5:30.960]  嗯。
[5:31.460,5:36.540]  我们这边应该基本就是这些，老师们是否还有什么问题吗？
[5:36.540,6:21.060]  你那个你说有4万多个节点呢，边是怎么定义的？

比如我们，比如说就是我们是那个疾病信息，疾病下面有很多属性，我们这个前端页面展示，比如说有宜吃食物，忌吃食物，并发症禁忌什么的，然后这些是分类的，就疾病一个类，然后食物一个类，然后疾病和食物之间有宜吃食物，禁忌食物呢，这两种关系，然后，比如说这样的疾病和疾病之间有并发症的关系，然后前端也可以通过并发症直接链到另一个

食物也是其中一个节点，

对一种节点，然后包括然后那些病因，然后检查项目，这些都是一类节点，然后疾病和那几类之间会有相应的关系。
[6:21.500,6:22.020]  嗯。
[6:22.260,6:37.620]  我现在看到哪个类似饼状的结果，这个是数据，

那个就是根据你收到结果简单的做一些可视化描述，包括那些审核的情况有多少待审核多少，未审核多少，已审核，做一个简单的可视化。
[6:37.580,6:42.920]  呃，不是，我的意思是指雷达图。
[6:42.940,7:3.080]  那张图就是就是它，其实它只是会那个，就是一个可呃数据，简单的可视化就表示了各个属性的数目

这个图数据是哪儿来的？

根据数据库拿来的
[7:3.100,7:25.620]  就是数据库里返回的信息，要根据这个信息，

这个数据是哪里来的？

原始数据
[7:25.600,7:26.440]  嗯。
[7:26.700,7:30.020]  就是感觉。
[7:30.340,7:36.480]  和我预期的比较下来，就打算拿个现成的在搞。
[7:36.760,7:44.760] 现成的只有一个，搜索，其他都没有，其他都是自己做的，
。
[7:44.740,7:58.720] 我我知道啊，但是 这，这，这个，你搜索的话，你是怎么搜索直接搜索呃节点名称，但是，呃，目前是因为疾病百科去搜索疾病节点名称，对这方面不不在。
[7:58.800,8:17.180]  呃，对，因为我们想你，你通过一个食物下面列了一大堆和它相关的疾病信息，也不太不太那啥，没啥就直接就只只能练习，没有额外的属性，直接盲列一些，那些疾病信息不太合适，就我们，所以考虑的就只设了疾病百科。
[8:17.260,8:26.760]  就通过疾病名来搜索，然后当然可以呃，有包括一些不不一定精确匹配吧，就可能会列出一些候选的结果，然后让用户选择。
[8:27.240,8:32.640]  这种，哎呀，我忘了。
[8:32.940,8:38.840]  那你们这种本来这个题目就更更多的希望你把那个对应的搜索结果或者搜索方式。
[8:38.920,8:40.200]  做一些这种创新。
[8:40.720,8:44.540]  那你这做出来就和百度百科搜索没啥区别。
[8:50.880,9:1.220]  你比他多多少或者是提供统？，

可能是就更细分领域，特别疾病这方面更细分的那些都有，

嗯还有吗？
[9:1.220,9:6.340]  只不过它内容比较专业而已，对，但是问题内容不是你。
[9:6.640,9:11.400]  嗯，是别人提供，这不是你们的。
[9:13.080,9:19.220]  呃，这方面所以内容不是一本书，只是我们的工作主要是。
[9:19.160,9:23.420]  做搜索展示，对吧，但是你这个感觉就是。
[9:23.800,9:29.780]  我想要做的就是你，你你，你又做了一个拿另外一套数据集而已。
[9:29.780,9:33.440]  然后做了一个和百度搜索的区别。
[9:33.400,9:43.720]  没法去，嗯，确实这方面就这方面的创新性不太够，

就是和这个搜索不太一样的。
[9:43.680,9:44.180]  嗯。
[9:46.560,9:57.040]  嗯，那我们这方面确实还存在一些不足模式上的这种整个搜索模式，呃，模式上创新不太准确。
[9:57.160,10:4.120]  是一个问题，我们当时可能没太考虑，没没太想出那种就是。
[10:4.120,10:10.740]  当时项目就初步初步讨论项目，出行的时候，可能没太没太讨论到那方面。
[10:11.080,10:11.700]  嗯。
[10:12.820,10:14.140]  嗯。
[10:19.460,10:20.660]  嗯。
[10:21.160,10:21.600]  嗯。
[10:21.880,10:22.360]  嗯。
[10:22.700,10:25.640]  也非常好使。
[10:26.860,10:28.140]  嗯。
[10:28.640,10:32.700]  行吧，就这样，嗯呢，谢谢了。

************************************end****************************************

